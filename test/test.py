# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.44, 0.8, 1, 1.16])
keys.append([[-0.303282, [3, -0.16, 0], [3, 0.12, 0]], [-0.102282, [3, -0.12, 0], [3, 0.0666667, 0]], [-0.266377, [3, -0.0666667, 0.0213454], [3, 0.0533333, -0.0170763]], [-0.283454, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.44, 0.8, 1])
keys.append([[-0.220854, [3, -0.16, 0], [3, 0.12, 0]], [-0.194775, [3, -0.12, 0], [3, 0.0666667, 0]], [-0.199418, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("HipPitch")
times.append([0.44, 0.72, 1.16])
keys.append([[-0.304001, [3, -0.16, 0], [3, 0.0933333, 0]], [-0.331108, [3, -0.0933333, 0], [3, 0.146667, 0]], [-0.21751, [3, -0.146667, 0], [3, 0, 0]]])

names.append("HipRoll")
times.append([0.44, 0.72, 1.16])
keys.append([[-0.00325858, [3, -0.16, 0], [3, 0.0933333, 0]], [-0.0188148, [3, -0.0933333, 0.00514233], [3, 0.146667, -0.0080808]], [-0.0429279, [3, -0.146667, 0], [3, 0, 0]]])

names.append("KneePitch")
times.append([0.44, 0.72, 1.16])
keys.append([[0.135736, [3, -0.16, 0], [3, 0.0933333, 0]], [0.156608, [3, -0.0933333, 0], [3, 0.146667, 0]], [0.0906479, [3, -0.146667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.52, 0.68, 0.92, 1.08])
keys.append([[-0.619178, [3, -0.186667, 0], [3, 0.0533333, 0]], [-0.642787, [3, -0.0533333, 0], [3, 0.08, 0]], [-0.441786, [3, -0.08, 0], [3, 0.0533333, 0]], [-0.443368, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.52, 0.68, 0.92, 1.08])
keys.append([[-1.75313, [3, -0.186667, 0], [3, 0.0533333, 0]], [-1.75828, [3, -0.0533333, 0], [3, 0.08, 0]], [-1.74296, [3, -0.08, -0.00368265], [3, 0.0533333, 0.0024551]], [-1.73987, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.52, 0.68, 0.92, 1.08])
keys.append([[0.18, [3, -0.186667, 0], [3, 0.0533333, 0]], [0.28, [3, -0.0533333, -0.0429011], [3, 0.08, 0.0643516]], [0.501758, [3, -0.08, -0.00756302], [3, 0.0533333, 0.00504202]], [0.5068, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.52, 0.68, 0.92, 1.08])
keys.append([[1.47297, [3, -0.186667, 0], [3, 0.0533333, 0]], [1.48219, [3, -0.0533333, 0], [3, 0.08, 0]], [1.33763, [3, -0.08, 0.0137183], [3, 0.0533333, -0.00914556]], [1.32849, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.52, 0.68, 0.92, 1.08])
keys.append([[0.156445, [3, -0.186667, 0], [3, 0.0533333, 0]], [0.154481, [3, -0.0533333, 0], [3, 0.08, 0]], [0.292924, [3, -0.08, -0.0447306], [3, 0.0533333, 0.0298204]], [0.378134, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.52, 0.68, 0.92, 1.08])
keys.append([[-0.972025, [3, -0.186667, 0], [3, 0.0533333, 0]], [-0.883137, [2, -0.04799, 0.0686284], [2, 0.0719852, -0.102942]], [-1.15054, [3, -0.08, 0.0297874], [3, 0.0533333, -0.0198583]], [-1.1704, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.48, 0.64, 1.04, 1.2])
keys.append([[1.26645, [3, -0.173333, 0], [3, 0.0533333, 0]], [1.22522, [3, -0.0533333, 0.0412265], [3, 0.133333, -0.103066]], [0.696427, [3, -0.133333, 0.06144], [3, 0.0533333, -0.024576]], [0.671851, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.48, 0.64, 1.04, 1.2])
keys.append([[1.24794, [3, -0.173333, 0], [3, 0.0533333, 0]], [1.23918, [3, -0.0533333, 0], [3, 0.133333, 0]], [1.37598, [3, -0.133333, -0.0231562], [3, 0.0533333, 0.00926247]], [1.38524, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.48, 0.64, 1.04, 1.2])
keys.append([[0.320164, [3, -0.173333, 0], [3, 0.0533333, 0]], [0.18, [3, -0.0533333, 0], [3, 0.133333, 0]], [0.921793, [3, -0.133333, -0.0885175], [3, 0.0533333, 0.035407]], [0.9572, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.64, 1.04, 1.2])
keys.append([[1.25137, [3, -0.226667, 0], [3, 0.133333, 0]], [0.805033, [3, -0.133333, 0.13995], [3, 0.0533333, -0.05598]], [0.663581, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.48, 0.64, 1.04, 1.2])
keys.append([[-0.316196, [3, -0.173333, 0], [3, 0.0533333, 0]], [-0.313693, [3, -0.0533333, 0], [3, 0.133333, 0]], [-0.409573, [3, -0.133333, 0], [3, 0.0533333, 0]], [-0.408801, [3, -0.0533333, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.48, 0.64, 1.04, 1.2])
keys.append([[1.48875, [3, -0.173333, 0], [3, 0.0533333, 0]], [1.47882, [3, -0.0533333, 0], [3, 0.133333, 0]], [1.62907, [3, -0.133333, -0.0385629], [3, 0.0533333, 0.0154252]], [1.64449, [3, -0.0533333, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion","169.254.142.30",9559)
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
